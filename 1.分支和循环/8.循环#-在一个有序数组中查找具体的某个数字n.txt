//问题：在一个有序数组中查找具体的某个数字n。编写int binsearch(int x, int v[], int n); 功能∶在v[0]<=v[1]<=v[2]<= ....<=v[n-1]的数组中查找x.


//解：
#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>

int main()//优化版 —— 折半查找算法/二分查找算法，查找次数少 666
{
	int k = 0;//k是要找的数字，需要我们输入
	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);//求数组元素个数
	int left = 0;//左下标
	int right = sz-1;//右下标

	scanf("%d", &k);
    
	while (left<=right)//若最后只剩一个数的时候就是 left=right
	{
		int mid = (left + right) / 2;
		if (arr[mid] > k)
		{
			right = mid - 1;//新右下标
		}
		else if (arr[mid] < k)
		{
			left = mid + 1;//新左下标
		}
		else
		{
			printf("找到啦!下标是：%d\n", mid);
			break;
		}
	}
	if (left > right)
		printf("找不到诶\n");
	return 0;
}


///////////////////////////////////////////////////////////////////////


/*int main()//经典版 —— 一一查找
{
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int sz = sizeof(arr) / sizeof(arr[0]);//求数组元素个数
	int k = 0;
	int i = 0;
	scanf("%d", &k);
	for (i = 0; i < sz; i++)//下标从0开始
	{
		if (k == arr[i])
		{
			printf("找到啦！下标是：%d\n", i);
			break;
		}
	}
	if (i = sz)
		printf("找不到诶。\n");
	return 0;
}*/





