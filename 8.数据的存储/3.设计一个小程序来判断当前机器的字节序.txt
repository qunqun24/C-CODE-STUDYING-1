#define _CRT_SECURE_NO_WARNINGS

#include<stdio.h>

/*法1：
int main()
{
	//写一段代码告诉我们当前机器的字节序是什么
	int a = 1;//补码：0x00 00 00 01
	char* p = (char*)&a;//因为使用char*p，*p只能访问一个字节，可以通过第一个字节的内容来判断是大端还是小端存储；因为&a是int*类型的，所以会使用(char*)强制转换格式
	if (*p == 1)//*p为01即1
	{
		printf("小端");//01 00 00 00
	}
	else
	{
		printf("大端");//00 00 00 01
	}
	return 0;
}
*/

//法2：用函数实现
int check_sys()
{
	int a = 1;
	//返回1，小端
	//返回0，大端
	return *(char*)&a;//对照法1，*p等于1，返回1；*p等于0，返回0。所以可以直接返回*p(解引用p),因为p=(char*)&a,所以*p=*(char*)&a
}

int main()
{
	//写一段代码告诉我们当前机器的字节序是什么
	//返回1，小端
	//返回0，大端
	int ret = check_sys();//尽量不要在函数里打印(若打印了，如果项目功能不需要这个函数打印出来的话，函数就没用了)
	if (ret == 1)
	{
		printf("小端\n");
	}
	else
	{
		printf("大端\n");
	}
	return 0;
}
//复习：指针类型的意义：
//1.指针类型决定了指针解引用操作符能访问几个字节：char*p;*p访问1个字节，int*p;*p访问4个字节
//2.指针类型决定了+1，-1，加的或者减的是几个字节；char*p;p+1,跳过一个字符（1个字节），int*p;p+1,跳过一个整形（4个字节）